<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.4"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>COREOS_SDK_VERSION</name>
          <description></description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SDK_SCRIPT_PATH</name>
          <description></description>
          <defaultValue>/mnt/host/source/src/scripts</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BOARD</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>amd64-usr</string>
              <string>arm64-usr</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>USER_NAME</name>
          <description></description>
          <defaultValue>lupan2005</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>USER_EMAIL</name>
          <description></description>
          <defaultValue>lupan2005@gmail.com</defaultValue>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>Build_Node</name>
          <description></description>
          <allowedSlaves/>
          <defaultSlaves>
            <string>coreos</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># setup env vars
export PATH=$PWD/mantle/bin:$PATH
##export V=master
##export S=/mnt/host/source/src/scripts
##export B=amd64-usr

git config --global user.name ${USER_NAME}
git config --global user.email ${USER_EMAIL}

# build mantle commands, including cork
#cd $HOME
sudo rm -rf mantle
git clone https://github.com/coreos/mantle.git
cd mantle
docker run --rm -v &quot;$PWD&quot;:/usr/src/myapp -w /usr/src/myapp golang ./build
#mkdir -p $HOME/bin/
#cp bin/* $HOME/bin/

sudo rm -rf coreos
mkdir coreos
cd coreos

# download CoreOS SDK, build packages and image
cork create --replace --sdk-version=${COREOS_SDK_VERSION} --verbose
cork enter -- ${SDK_SCRIPT_PATH}/build_packages --board=${BOARD}
cork enter -- ${SDK_SCRIPT_PATH}/build_image --board=${BOARD} dev prod

# optionally you can run the kola tests on the built image
cork enter -- sudo kola run -v

# build dev and prod QEMU images
cork enter -- ${SDK_SCRIPT_PATH}/image_to_vm.sh --board=${BOARD}
cork enter -- ${SDK_SCRIPT_PATH}/image_to_vm.sh --board=${BOARD} --prod_image</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>